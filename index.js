const express = require('express');
const { 
    default: makeWASocket, 
    DisconnectReason, 
    useMultiFileAuthState,
    fetchLatestBaileysVersion 
} = require('@whiskeysockets/baileys');
const qrcode = require('qrcode-terminal');
const { Boom } = require('@hapi/boom');
const P = require('pino');
require('dotenv').config();

// ุฅุนุฏุงุฏ ุงูุชุทุจูู
const app = express();
const PORT = process.env.PORT || 3000;

// ุฅุนุฏุงุฏ middleware
app.use(express.json());

// ุฅุนุฏุงุฏ logger ุฎููู
const logger = P({ level: 'silent' }); // ุตุงูุช ูุชูููุฑ ุงูููุงุฑุฏ

// ูุชุบูุฑุงุช ุนุงูุฉ ูุญุงูุฉ ุงูุงุชุตุงู
let sock = null;
let isConnected = false;
let qrCodeGenerated = false;

/**
 * ุฅูุดุงุก ุงุชุตุงู ูุงุชุณุงุจ ูุน ุฅุฏุงุฑุฉ ุงูุฌูุณุฉ ุงูุฎูููุฉ
 * ูุณุชุฎุฏู useMultiFileAuthState ูุญูุธ ุจุตูุฉ ุงููุตุงุฏูุฉ ููุท
 */
async function startWhatsAppConnection() {
    try {
        // ุงูุญุตูู ุนูู ุฃุญุฏุซ ุฅุตุฏุงุฑ ูู Baileys
        const { version } = await fetchLatestBaileysVersion();
        
        // ุฅุนุฏุงุฏ ุญุงูุฉ ุงููุตุงุฏูุฉ - ููุง ูุชู ุญูุธ ุงูุจุตูุฉ ููุท
        // ุงููุฌูุฏ whatsapp_session ุณูุญุชูู ุนูู ูููุงุช ุตุบูุฑุฉ ุฌุฏุงู ููุท:
        // - ููุงุชูุญ ุงูุชุดููุฑ
        // - ุจูุงูุงุช ุงุนุชูุงุฏ ุงูุฌูุงุฒ  
        // - ูุนูููุงุช ุงูุชุณุฌูู ุงูุฃุณุงุณูุฉ
        const { state, saveCreds } = await useMultiFileAuthState('whatsapp_session');
        
        // ุฅูุดุงุก socket ุงูุงุชุตุงู ูุน ุฅุนุฏุงุฏุงุช ูุญุณููุฉ ููุฃุฏุงุก
        sock = makeWASocket({
            version,
            logger, // ุงุณุชุฎุฏุงู logger ุตุงูุช
            auth: state,
            printQRInTerminal: false, // ูุชุญูู ูุญู ูู ุนุฑุถ QR
            defaultQueryTimeoutMs: 60000,
            // ุฅุนุฏุงุฏุงุช ูุชูููุฑ ุงูููุงุฑุฏ
            generateHighQualityLinkPreview: false,
            syncFullHistory: false, // ูุง ูุญูุธ ุชุงุฑูุฎ ุงูุฑุณุงุฆู
            markOnlineOnConnect: false,
            // ุชุญุณููุงุช ุฅุถุงููุฉ
            shouldSyncHistoryMessage: () => false, // ููุน ุชุฒุงูู ุชุงุฑูุฎ ุงูุฑุณุงุฆู
            shouldIgnoreJid: () => false,
            getMessage: async () => undefined // ููุน ุญูุธ ุงูุฑุณุงุฆู ูู ุงูุฐุงูุฑุฉ
        });

        // ูุนุงูุฌ ุงูุงุชุตุงู - ูุชู ุญูุธ ุจูุงูุงุช ุงููุตุงุฏูุฉ ุงูุฎูููุฉ ููุท
        sock.ev.on('creds.update', saveCreds);

        // ูุนุงูุฌ ุชุญุฏูุซุงุช ุงูุงุชุตุงู
        sock.ev.on('connection.update', (update) => {
            const { connection, lastDisconnect, qr } = update;
            
            if (qr && !qrCodeGenerated) {
                console.log('\n๐ฑ ุงูุณุญ ุฑูุฒ QR ุงูุชุงูู ุจูุงุชุณุงุจ:');
                qrcode.generate(qr, { small: true });
                console.log('\n๐ ูู ุงูุชุธุงุฑ ุงููุณุญ...\n');
                qrCodeGenerated = true;
            }
            
            if (connection === 'open') {
                console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุชุณุงุจ ุจูุฌุงุญ');
                isConnected = true;
                qrCodeGenerated = false;
            }
            
            if (connection === 'close') {
                isConnected = false;
                const shouldReconnect = (lastDisconnect?.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut;
                
                console.log('โ ุงููุทุน ุงูุงุชุตุงู:', lastDisconnect?.error);
                
                if (shouldReconnect) {
                    console.log('๐ ูุญุงููุฉ ุฅุนุงุฏุฉ ุงูุงุชุตุงู...');
                    setTimeout(startWhatsAppConnection, 3000);
                } else {
                    console.log('๐ช ุชู ุชุณุฌูู ุงูุฎุฑูุฌ. ูุฑุฌู ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุงุฏู');
                }
            }
        });

        // ูุนุงูุฌ ุงูุฑุณุงุฆู - ูุชุฌุงูู ุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ ูุชูููุฑ ุงูููุงุฑุฏ
        sock.ev.on('messages.upsert', () => {
            // ูุง ูุนุงูุฌ ุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ ูุชูููุฑ ุงูุฐุงูุฑุฉ ูุงููุนุงูุฌุฉ
        });

    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุจุฏุก ุงูุงุชุตุงู:', error);
        // ุฅุนุงุฏุฉ ูุญุงููุฉ ุจุนุฏ 5 ุซูุงูู
        setTimeout(startWhatsAppConnection, 5000);
    }
}

/**
 * ุงูุชุญูู ูู ุตุญุฉ ุฑูู ุงููุงุชู ูุชูุณููู
 */
function formatPhoneNumber(number) {
    // ุฅุฒุงูุฉ ุฃู ุฑููุฒ ุบูุฑ ุฑูููุฉ
    let cleaned = number.replace(/\D/g, '');
    
    // ุงูุชุฃูุฏ ูู ูุฌูุฏ ุฑูุฒ ุงูุฏููุฉ
    if (!cleaned.startsWith('966') && cleaned.length === 9) {
        cleaned = '966' + cleaned; // ุฅุถุงูุฉ ุฑูุฒ ุงูุณุนูุฏูุฉ ุงูุชุฑุงุถูุงู
    }
    
    return cleaned + '@s.whatsapp.net';
}

/**
 * ุงูุชุญูู ูู ูุฌูุฏ ุงูุฑูู ูู ูุงุชุณุงุจ
 */
async function checkNumberExists(jid) {
    try {
        const [result] = await sock.onWhatsApp(jid.replace('@s.whatsapp.net', ''));
        return result?.exists || false;
    } catch (error) {
        console.error('ุฎุทุฃ ูู ุงูุชุญูู ูู ุงูุฑูู:', error);
        return false;
    }
}

// Routes - ููุงุท ุงูููุงูุฉ

/**
 * ุงูุชุญูู ูู ุญุงูุฉ ุงูุงุชุตุงู
 * GET /api/status
 */
app.get('/api/status', (req, res) => {
    res.json({
        success: true,
        isReady: isConnected,
        message: isConnected ? 'ุงูุฎุฏูุฉ ุฌุงูุฒุฉ' : 'ูู ุงูุชุธุงุฑ ุงูุงุชุตุงู'
    });
});

/**
 * ุฅุฑุณุงู ุฑุณุงูุฉ
 * POST /api/send
 * Body: { "number": "966xxxxxxxx", "message": "ูุต ุงูุฑุณุงูุฉ" }
 */
app.post('/api/send', async (req, res) => {
    try {
        const { number, message } = req.body;
        
        // ุงูุชุญูู ูู ุงูุจูุงูุงุช ุงููุทููุจุฉ
        if (!number || !message) {
            return res.status(400).json({
                success: false,
                message: 'ุฑูู ุงููุงุชู ูุงูุฑุณุงูุฉ ูุทููุจุงู'
            });
        }
        
        // ุงูุชุญูู ูู ุญุงูุฉ ุงูุงุชุตุงู
        if (!isConnected || !sock) {
            return res.status(503).json({
                success: false,
                message: 'ุงูุฎุฏูุฉ ุบูุฑ ูุชุงุญุฉ. ูุฑุฌู ุงูุชุฃูุฏ ูู ุงูุงุชุตุงู'
            });
        }
        
        // ุชูุณูู ุฑูู ุงููุงุชู
        const jid = formatPhoneNumber(number);
        
        // ุงูุชุญูู ูู ูุฌูุฏ ุงูุฑูู ูู ูุงุชุณุงุจ
        const numberExists = await checkNumberExists(jid);
        if (!numberExists) {
            return res.status(404).json({
                success: false,
                message: 'ุฑูู ุงููุงุชู ุบูุฑ ููุฌูุฏ ูู ูุงุชุณุงุจ'
            });
        }
        
        // ุฅุฑุณุงู ุงูุฑุณุงูุฉ
        await sock.sendMessage(jid, { text: message });
        
        console.log(`โ ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุฅูู: ${number}`);
        
        res.json({
            success: true,
            message: 'ุชู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุจูุฌุงุญ'
        });
        
    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฑุณุงูุฉ:', error);
        res.status(500).json({
            success: false,
            message: 'ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฑุณุงูุฉ'
        });
    }
});

/**
 * ูุนูููุงุช ุฃุณุงุณูุฉ ุนู ุงูAPI
 * GET /
 */
app.get('/', (req, res) => {
    res.json({
        service: 'WhatsApp API',
        version: '1.0.0',
        endpoints: {
            status: 'GET /api/status',
            send: 'POST /api/send'
        },
        ready: isConnected
    });
});

// ูุนุงูุฌ ุงูุฃุฎุทุงุก ุงูุนุงูุฉ
app.use((error, req, res, next) => {
    console.error('โ ุฎุทุฃ ุนุงู:', error);
    res.status(500).json({
        success: false,
        message: 'ุฎุทุฃ ุฏุงุฎูู ูู ุงูุฎุงุฏู'
    });
});

// ูุนุงูุฌ ุงูุตูุญุงุช ุบูุฑ ุงูููุฌูุฏุฉ
app.use('*', (req, res) => {
    res.status(404).json({
        success: false,
        message: 'ุงููุณุงุฑ ุบูุฑ ููุฌูุฏ'
    });
});

// ุจุฏุก ุงูุฎุงุฏู
async function startServer() {
    try {
        // ุจุฏุก ุงุชุตุงู ูุงุชุณุงุจ ุฃููุงู
        console.log('๐ ุฌุงุฑู ุจุฏุก ุฎุฏูุฉ ูุงุชุณุงุจ...');
        await startWhatsAppConnection();
        
        // ุจุฏุก ุฎุงุฏู Express
        app.listen(PORT, () => {
            console.log(`๐ ุฎุงุฏู API ูุนูู ุนูู ุงูุจูุฑุช ${PORT}`);
            console.log(`๐ ุงูุญุงูุฉ: http://localhost:${PORT}/api/status`);
            console.log(`๐ค ุฅุฑุณุงู: POST http://localhost:${PORT}/api/send`);
            console.log('\n๐ก ููุงุญุธุฉ: ุฌูุณุฉ ุงููุตุงุฏูุฉ ูุญููุธุฉ ูู ูุฌูุฏ whatsapp_session');
            console.log('๐ ุญุฌู ุงูุฌูุณุฉ ูุญุณูู ููููู ุฃูู ูุง ูููู (ุจุถุนุฉ ููููุจุงูุช ููุท)');
        });
    } catch (error) {
        console.error('โ ูุดู ูู ุจุฏุก ุงูุฎุงุฏู:', error);
        process.exit(1);
    }
}

// ูุนุงูุฌุฉ ุฅููุงู ุงูุฎุงุฏู ุจุฃูุงู
process.on('SIGINT', () => {
    console.log('\n๐ ุฌุงุฑู ุฅููุงู ุงูุฎุงุฏู...');
    if (sock) {
        sock.end();
    }
    process.exit(0);
});

process.on('SIGTERM', () => {
    console.log('\n๐ ุชู ุงุณุชูุงู ุฅุดุงุฑุฉ ุงูุฅููุงู...');
    if (sock) {
        sock.end();
    }
    process.exit(0);
});

// ุจุฏุก ุงูุชุทุจูู
startServer();